
params {
    outdir = "./results"
    publish_dir_mode = 'copy'
}

process {
    errorStrategy = {
        if (task.attempt > 1) {
            return 'finish'
        } else {
            // sleep(Math.pow(2, task.attempt - 1) * 6000 as long)
            return 'retry'
        }
    }
    maxRetries = 1
    
    memory = { 1.GB * task.attempt }
    containerOptions = { "--memory-swap ${task.memory.mega.intValue()}m" }
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

}

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')

profiles {
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
}


trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}